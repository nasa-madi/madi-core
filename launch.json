{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
  

    {
      "name": "Attach by Process ID",
      "processId": "${command:PickProcess}",
      "request": "attach",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "type": "node"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "CLI Mocha Tests",
      "cwd": "${workspaceFolder}/interfaces/cli/",
      "program": "node_modules/.bin/_mocha",
      "args": [
          // "-u",
          // "tdd",
          "--timeout",
          "999999",
          "--colors",
          "./test/**/*.test.js"
      ],
      "internalConsoleOptions": "openOnSessionStart"
    },
    {
        "type": "node",
        "request": "launch",
        "name": "Nodemon Tests",
        "runtimeExecutable": "nodemon",
        "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
        "restart": true,
        "console": "integratedTerminal",
        "internalConsoleOptions": "neverOpen",
        "disableOptimisticBPs": true
    },
    {
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}/api/",
      "name": "API",
      "skipFiles": ["<node_internals>/**"],
      "runtimeVersion": "default",
      "console": "externalTerminal",
      "outputCapture": "std",
      "program": "src/index.js"
    },
      {
        "type": "node",
        "request": "launch",
        "name": "foas",
        "cwd": "${workspaceFolder}/api/",
        "console": "externalTerminal",
        "runtimeExecutable": "npm",
        "runtimeArgs": [
          "run",
          "foas:generate"
        ],
        "skipFiles": ["<node_internals>/**"]
      },
    {
      "type": "node",
      "request": "launch",
      "name": "CLI",
      "cwd": "${workspaceFolder}/interfaces/cli",
      "skipFiles": ["<node_internals>/**"],
      "runtimeVersion": "default",
      "console": "externalTerminal",
      "outputCapture": "std",
      "program": "index.js",
  
    },
        {
          "type": "bun",
          "request": "launch",
          "name": "Debug Bun",
    
          // The path to a JavaScript or TypeScript file to run.
          "program": "${workspaceFolder}/tools/server.ts",
    
          // The arguments to pass to the program, if any.
          "args": [],
    
          // The working directory of the program.
          "cwd": "${workspaceFolder}/tools",
    
          // The environment variables to pass to the program.
          "env": {},
    
          // If the environment variables should not be inherited from the parent process.
          "strictEnv": false,
    
          // If the program should be run in watch mode.
          // This is equivalent to passing `--watch` to the `bun` executable.
          // You can also set this to "hot" to enable hot reloading using `--hot`.
          "watchMode": false,
    
          // If the debugger should stop on the first line of the program.
          "stopOnEntry": false,
    
          // If the debugger should be disabled. (for example, breakpoints will not be hit)
          "noDebug": false,
    
          // The path to the `bun` executable, defaults to your `PATH` environment variable.
          "runtime": "bun",
    
          // The arguments to pass to the `bun` executable, if any.
          // Unlike `args`, these are passed to the executable itself, not the program.
          "runtimeArgs": [],
        },
        {
          "type": "bun",
          "request": "attach",
          "name": "Attach to Bun",
    
          // The URL of the WebSocket inspector to attach to.
          // This value can be retrieved by using `bun --inspect`.
          "url": "ws://localhost:6499/",
    }
  ]
}
