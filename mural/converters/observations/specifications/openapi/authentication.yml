paths:
  /authentication:
    post:
      summary: Returns JWT authentication token based on accurate login information that can be included in request headers to access restricted routes
      operationId: postAuthToken
      description: Creates a new JWT token and allows the user to use restricted paths
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
        description: Authenticate api requests
      security: []
      responses:
        '201':
          description: JWT created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Response'
              examples:
                authentication_default:
                  $ref: "#/components/examples/authentication_default"
        '401':
          description: authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                authentication_login_error:
                  $ref: "#/components/examples/authentication_login_error"
        default:
          description: login error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                authentication_login_error:
                  $ref: "#/components/examples/authentication_login_error"
components: 
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, for documentation purposes only
  schemas:
    Authentication_Response:
      type: object
      required:
        - accessToken
        - authentication
        - key
      properties:
        accessToken:
          type: string
          example: "uoiiopuiopiUzI1NiIsInR5cCI6ImFjY2VzcyJ9"
        authentication:
          type: object
          properties:
            strategy:
              type: string
              example: local
            accessToken:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6ImFjY2VzcyJ9
            payload:
              type: object
              properties:
                iat:
                  type: string
                  example: 1621287175
                exp:
                  type: string
                  example: 1621373575
                aud:
                  type: string
                  example: https://yourdomain.com
                iss:
                  type: string
                  example: feathers
                sub:
                  type: string
                  example: 1
                jti:
                  type: string
                  example: e22bac05-bea6-4169-a839-cad4cfab22ce
    Authentication:
      type: object
      required:
        - strategy
        - clientKey
        - clientSecret
      properties:
        strategy:
          type: string
          example: local
        clientKey:
          type: string
          example: keyUsedForTesting
        clientSecret:
          type: string
          example: passwordUsedForTesting
  examples:
    authentication_default:
      value:
        accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6ImFjY2VzcyJ9"
        authentication:
          strategy: local
          accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6ImFjY2VzcyJ9
          payload:
            iat: 1621287175
            exp: 1621373575
            aud: https://yourdomain.com
            iss: feathers
            sub: 1
            jti: e22bac05-bea6-4169-a839-cad4cfab22ce
            key:
              $ref: "#/components/schemas/Key"
    authentication_login_error:
      value:
        name: NotAuthenticated
        message: 'Not Authenticated'
        code: 401
        className: not-authenticated
        data: {}
        errors:
          - { message: 'Invalid authentication information (strategy not allowed in authStrategies)' }
          - { message: 'Invalid login' }