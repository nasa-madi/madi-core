########################################
# CONTRACT API - This compose file stands up and runs the contract-api tests and dependencies only
########################################

version: '3.8'

services:

  # This is the postgres docker DB available at port 35432
  #   - This only for local usage and has no bearing on CloudSQL
  #   - When referencing the db from a compose container, use database:5432
  #   - When referencing the db from an external process, use localhost:35432
  database:
    image: "postgres:10.16"
    environment:
      - POSTGRES_USER=unicorn_user
      - POSTGRES_PASSWORD=magical_password
      - POSTGRES_DB=rainbow_database
    volumes:
      - database-data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unicorn_user -d rainbow_database"]
      interval: 5s
      timeout: 5s
      retries: 5

  # This is the real API available at port 3030
  #   - This builds an image for the top level docker-compose
  #     and may not be the same image as built under the /api folder directly
  api:
    build: ../../api
    networks:
      - default
    environment:
      - NODE_ENV=local-contract-api
      - POSTGRES_PASSWORD=magical_password
      - POSTGRES_USER=unicorn_user
      - POSTGRES_DB=rainbow_database
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - PUSH_ENDPOINT=http://api:3030/
      - PUBSUB_API_ENDPOINT=pubsub:8085
    ports:
      - "3030:3030"
    healthcheck:
      test: "exit 0"
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      database:
        condition: service_healthy


  # Contract Tests against the API itself
  blueprint_api_test:
    image: "postman/newman" # use latest official postgres version
    networks:
      - default
    volumes:
      - "../../api/specifications:/etc/newman"
    depends_on:
      database:
        condition: service_healthy
      api:
        condition: service_healthy
    entrypoint:
      newman run blueprint.postman_collection.json
      --folder v1
      -e local_container.postman_environment.json
      --env-var "baseUrl=api:3030"



volumes:
  database-data:
