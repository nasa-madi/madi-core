########################################
# CONTRACT API - This compose file stands up and runs the contract-api tests and dependencies only
########################################

version: '3.8'

services:

  # This is the postgres docker DB available at port 35432
  #   - This only for local usage and has no bearing on CloudSQL
  database:
    image: "postgres:10.16"
    environment:
      - POSTGRES_USER=unicorn_user
      - POSTGRES_PASSWORD=magical_password
      - POSTGRES_DB=rainbow_database
    volumes:
      - database-data:/var/lib/postgresql/data/
    networks:
      - default
    logging: # This suppresses logs
      driver: "none"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unicorn_user -d rainbow_database"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Contract Tests against the API itself
  unit_test:
    build: ../../api
    environment:
      - NODE_ENV=local-unit
      - POSTGRES_PASSWORD=magical_password
      - POSTGRES_USER=unicorn_user
      - POSTGRES_DB=rainbow_database
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - PUSH_ENDPOINT=http://api:3030/
      - PUBSUB_API_ENDPOINT=pubsub:8085
    depends_on:
      twilio:
        condition: service_started
      database:
        condition: service_healthy
    entrypoint: >
      sh -c "
        npm install;
        npm run test-compose;
      "

  # This is a mock twilio API available at port 4020
  twilio:
    container_name: twilio_mock
    image: stoplight/prism:4.2.6
    volumes:
      - "../../api/specifications:/tmp"
    ports:
      - "4020:4020"
    command: >
      mock -m -p 4020 -d --host 0.0.0.0 "/tmp/twilio-specification.yml" -m

  pubsub:
    image: getalma/gcp-pubsub-emulator:latest
    ports:
      - "8085:8085"

  pubsub_receiver:
    image: vimagick/json-server
    ports:
      - "5000:5000"
    restart: always
    entrypoint: >
      sh -c "
        mkdir data
        echo '{\"conversations\":[], \"messages\":[]}' > /data/db.json;
        json-server -H 0.0.0.0 -p 5000 -w db.json
      "

volumes:
  database-data:

