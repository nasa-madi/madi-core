services:

  #-----------------------------
  # LLAMA SERVICE
  #-----------------------------
  # This service builds and runs a script from the ./models/llama-cpp-python directory.
  # The service is available at port 8000.
  llama:
    # Before running, you must run ./models/llama-cpp-python/build.sh
    build: 
      context: ./models/llama-cpp-python
    image: open_llama_3b
    ports:
      - 8000:8000
    volumes:
      - ./models/llama-cpp-python:/data
    cap_add:
      - SYS_RESOURCE

  parser:
    image: ghcr.io/nlmatics/nlm-ingestor:latest
    ports:
      - 5010:5001

  #-----------------------------
  # UNSTRUCTURED - DOCUMENT INGESTION
  #-----------------------------
  # This service runs a version of the Unstructured Document parsing tool
  # The service is available at port 8000.
  unstructured:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:latest
    command: --port 8000 --host 0.0.0.0
    ports:
      - 8000:8000
    restart: always


  #-----------------------------
  # MOCK API SERVICE
  #-----------------------------
  # This service is a mock API available at port 8080
  mock:
    image: stoplight/prism:4.2.6
    volumes:
      - "./api/specifications:/tmp"
    ports:
      - "8080:4010"
    command: >
      mock -m -p 4010 --host 0.0.0.0 "/tmp/api-specification.yml" -m


  
  #-----------------------------
  # API SERVICE
  #-----------------------------
  # This is the real API available at port 3030.  It builds an image 
  # for the top level docker-compose and may not be the same image 
  # as built under the /api folder directly
  api:
    build: ./api
    environment:
      - NODE_ENV=development
      - DEBUG=*
      - NODE_CONFIG_ENV=docker
    ports:
      - "3030:3030"
      - "9229:9229"
    networks:
      - madi
    command: node --inspect=0.0.0.0:9229 ./src/index.js
    depends_on:
      database:
        condition: service_healthy
      storage: 
        condition: service_healthy

  #-----------------------------
  # DATABASE SERVICE
  #-----------------------------
  # This is the postgres docker DB available at port 35432 for local usage.
  # When referencing the db from a compose container, use database:5432
  # When referencing the db from an external process, use localhost:35432
  database:
    image: "ankane/pgvector"
    environment:
      - POSTGRES_USER=unicorn_user
      - POSTGRES_PASSWORD=magical_password
      - POSTGRES_DB=rainbow_database
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - madi
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unicorn_user -d rainbow_database"]
      interval: 5s
      timeout: 5s
      retries: 5


  #-----------------------------
  # CLOUD STORAGE MOCK SERVICE
  #-----------------------------
  # This mocks out a Google Cloud Storage server so that local testing
  # can be done with a GCS Bucket library.
  storage:
    image: jamesmtc/madi-gcp-emulator:latest
    environment:
      - PORT=9023
      - STORAGE_BASE=./api
      - STORAGE_DIR=./uploads
    ports:
      - "9023:9023"
    volumes:
      - ./uploads:/storage
    command: ["start", "--host=storage", "--port=9023", "--in-memory"]
    networks:
      - madi
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9023 | grep 'OK' || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 5

  #-----------------------------
  # UI SERVICE
  #-----------------------------
  # This is the UI service that is typically deployed at the root
  # of the domain for this project. In the cloud, this should be served 
  # by a static proxy.
  ui:
    build: ./interfaces/web/
    ports:
      - 5173:5173
    environment:
      - OPENAI_API_HOST=https://localhost:3030




networks:
  madi:

volumes:
  database-data:
  vss-data:
